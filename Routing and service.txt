service.ts
----------------------
import { Injectable }  from  '@angular/core';
import { employeeList }from '../mockdata/employee';
import { employee } from '../model/employee';

@Injectable()
export class employeeservice{

getallemployees()
{
    return employeeList;
}
saveemployee(emp)
{
employeeList.push(emp);
}
}

calling srevice
----------------------------------
 constructor(private empservice:employeeservice) { }
save()
{

this.myemp={Empid:this.empno,Empname:this.empname,Empage:this.empage};


  this.empservice.saveemployee(this.myemp);
}




app/module.ts
----------------------
import { BrowserModule } from '@angular/platform-browser';
import { NgModule } from '@angular/core';
import { FormsModule } from '@angular/forms';
import { HttpModule } from '@angular/http';

import { AppComponent } from './app.component';
import { EmployeeComponent } from './employee/employee.component';
import { NavigationComponent } from './navigation/navigation.component';
import { HomeComponent } from './home/home.component';
import { AboutComponent } from './about/about.component';
import { RouterModule,Routes } from '@angular/router';
import { ErrorComponent } from './error/error.component';

import {Route} from './myroute';
import { CreateemployeeComponent } from './employee/createemployee/createemployee.component';
import { EmployeedetailComponent } from './employee/employeedetail/employeedetail.component';
import { employeeservice } from './shared/services/employeeservice';

@NgModule({
  declarations: [
    AppComponent,
    EmployeeComponent,
    NavigationComponent,
    HomeComponent,
    AboutComponent,
    ErrorComponent,
    CreateemployeeComponent,
    EmployeedetailComponent
  ],
  imports: [
    BrowserModule,
    FormsModule,
    HttpModule,Route
  ],
  providers: [employeeservice],
  bootstrap: [AppComponent]
})
export class AppModule { }




route.ts
----------------------------
import { EmployeeComponent } from './employee/employee.component';
import { NavigationComponent } from './navigation/navigation.component';
import { HomeComponent } from './home/home.component';
import { AboutComponent } from './about/about.component';
import{ RouterModule,Routes } from '@angular/router';
import { ErrorComponent } from './error/error.component';
import { CreateemployeeComponent } from "app/employee/createemployee/createemployee.component";
import { EmployeedetailComponent } from "app/employee/employeedetail/employeedetail.component";


const myRoute:Routes=[
  {path:'',component:HomeComponent},
  {path:'home',component:HomeComponent},
  {path:'home/:id',component:HomeComponent},
  {path:'about',component:AboutComponent},
  {path:'employee',component:EmployeeComponent,

children :[{path:'createemployee',component: CreateemployeeComponent},
{path:'viewallemployee',component: EmployeedetailComponent}]
},

  {path:'**',component:ErrorComponent}

]

export const Route=RouterModule.forRoot(myRoute);

routerlink
---------------
<div>
<ul>
<li>
    <a [routerLink]='["home"]'>Home</a>
    </li>
<li>
    <a [routerLink]='["home","7"]'>Home with value</a>
    </li>
<li>
    <a [routerLink]='["employee"]'>Employee</a>
    </li>
<li>
    <a [routerLink]='["about"]'>About</a>
    </li>
</ul>
</div>
<router-outlet></router-outlet>

eventemitter
---------------------
<app-employee [mySelectedEmp]="selectedemp" (myevent)="getdata($event)"></app-employee>
This getdata can be called as a function

in employee.ts

@Input() mySelectedEmp;

@Output()  myevent = new EventEmitter;

approveMe(val){

this.myevent.emit("employee "+val +" approved");

}
discardme(val)
{
  this.myevent.emit("employee "+val + " discarded")
}
